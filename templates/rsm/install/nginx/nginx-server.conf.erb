upstream <%= name %>_server {
<%- if socket_per_worker -%>
  <%- (0...worker_processes).each do |n| -%>
  server unix:<%= application_root %>/tmp/sockets/<%= server %>.<%= n %>.sock fail_timeout=0; # socket path must be same with last one in #{application_root}/config/unicorn.rb
  <%- end -%>
<%- else -%>
  server unix:<%= application_root %>/tmp/sockets/<%= server %>.sock fail_timeout=0; # socket path must be same with last one in #{application_root}/config/unicorn.rb
<%- end -%>
}

server {
  listen <%= domain %>:80;
  server_name <%= domain -%><%= if rewrite_www then " www.#{domain}" end -%>;

  client_max_body_size 1G;
  keepalive_timeout 5;
  root <%= application_root %>/public;

  try_files $uri/index.html $uri.html $uri @<%= name %>;

  access_log <%= application_root %>/log/access.log;
  error_log <%= application_root %>/log/error.log;

  location @<%= name %> {
    <% if auth_basic -%>
    auth_basic            "<%= auth_basic_realm %>";
    auth_basic_user_file  <%= auth_basic_user_file%>;
    <% end -%>

    <% if rewrite_www -%>
    if ($host ~* www\.(.*)) {
      set $host_without_www $1;
      rewrite ^(.*)$ http://$host_without_www$1 permanent; # $1 contains '/foo', not 'www.mydomain.com/foo'}
    }
    <% end -%>

    if (!-f $request_filename) {
      proxy_pass http://<%= name %>_server;
      break;
    }

    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
  }

  error_page 500 502 503 504 /500.html;
  location = /500.html {
    root <%= application_root %>/public;
  }
}

